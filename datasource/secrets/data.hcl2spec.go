// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package secrets

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	Host         *string `mapstructure:"host" cty:"host" hcl:"host"`
	ServiceToken *string `mapstructure:"service_token" cty:"service_token" hcl:"service_token"`
	FolderPath   *string `mapstructure:"folder_path" cty:"folder_path" hcl:"folder_path"`
	EnvSlug      *string `mapstructure:"env_slug" required:"true" cty:"env_slug" hcl:"env_slug"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"host":          &hcldec.AttrSpec{Name: "host", Type: cty.String, Required: false},
		"service_token": &hcldec.AttrSpec{Name: "service_token", Type: cty.String, Required: false},
		"folder_path":   &hcldec.AttrSpec{Name: "folder_path", Type: cty.String, Required: false},
		"env_slug":      &hcldec.AttrSpec{Name: "env_slug", Type: cty.String, Required: false},
	}
	return s
}

// FlatDatasourceOutput is an auto-generated flat version of DatasourceOutput.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatDatasourceOutput struct {
	Secrets map[string]Secret `mapstructure:"secrets" required:"true" cty:"secrets" hcl:"secrets"`
}

// FlatMapstructure returns a new FlatDatasourceOutput.
// FlatDatasourceOutput is an auto-generated flat version of DatasourceOutput.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*DatasourceOutput) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatDatasourceOutput)
}

// HCL2Spec returns the hcl spec of a DatasourceOutput.
// This spec is used by HCL to read the fields of DatasourceOutput.
// The decoded values from this spec will then be applied to a FlatDatasourceOutput.
func (*FlatDatasourceOutput) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"secrets": &hcldec.AttrSpec{Name: "secrets", Type: cty.Map(cty.String), Required: false},
	}
	return s
}

// FlatSecret is an auto-generated flat version of Secret.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatSecret struct {
	Version       *int    `mapstructure:"version" required:"true" cty:"version" hcl:"version"`
	Workspace     *string `mapstructure:"workspace" required:"true" cty:"workspace" hcl:"workspace"`
	Type          *string `mapstructure:"type" required:"true" cty:"type" hcl:"type"`
	Environment   *string `mapstructure:"environment" required:"true" cty:"environment" hcl:"environment"`
	SecretKey     *string `mapstructure:"secret_key" required:"true" cty:"secret_key" hcl:"secret_key"`
	SecretValue   *string `mapstructure:"secret_value" required:"true" cty:"secret_value" hcl:"secret_value"`
	SecretComment *string `mapstructure:"secret_comment" required:"true" cty:"secret_comment" hcl:"secret_comment"`
}

// FlatMapstructure returns a new FlatSecret.
// FlatSecret is an auto-generated flat version of Secret.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Secret) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatSecret)
}

// HCL2Spec returns the hcl spec of a Secret.
// This spec is used by HCL to read the fields of Secret.
// The decoded values from this spec will then be applied to a FlatSecret.
func (*FlatSecret) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"version":        &hcldec.AttrSpec{Name: "version", Type: cty.Number, Required: false},
		"workspace":      &hcldec.AttrSpec{Name: "workspace", Type: cty.String, Required: false},
		"type":           &hcldec.AttrSpec{Name: "type", Type: cty.String, Required: false},
		"environment":    &hcldec.AttrSpec{Name: "environment", Type: cty.String, Required: false},
		"secret_key":     &hcldec.AttrSpec{Name: "secret_key", Type: cty.String, Required: false},
		"secret_value":   &hcldec.AttrSpec{Name: "secret_value", Type: cty.String, Required: false},
		"secret_comment": &hcldec.AttrSpec{Name: "secret_comment", Type: cty.String, Required: false},
	}
	return s
}
